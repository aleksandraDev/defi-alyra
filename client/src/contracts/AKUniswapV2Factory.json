{
  "contractName": "AKUniswapV2Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/UniswapV2/AKUniswapV2Factory.sol\":\"AKUniswapV2Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/UniswapV2/AKUniswapV2ERC20.sol\":{\"keccak256\":\"0x6cb8f530c2759d31c554a668794a8722d9bcfe9c4b648d37d5fccf6acf1f529d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41909f58ad85cb56265006967f204f2e3e68078596715038d99107dd61f8925d\",\"dweb:/ipfs/QmTQXbGvGtDZRksgfKkwi1ZWFqfw8LdjJasy99oMAQqKQQ\"]},\"project:/contracts/UniswapV2/AKUniswapV2Factory.sol\":{\"keccak256\":\"0xc1287e12df34806f4cd37ddf41299f254d63abbac9181639aa2b59dd38cb5505\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3125f78743ad74c7d5b055e577f41ec83bcea9ce57ac750af620c66210f996fa\",\"dweb:/ipfs/QmZuEL9fvHXWRysuq8NYiQtNJpUrmExAKK1woeJKS5dXdt\"]},\"project:/contracts/UniswapV2/AKUniswapV2Pair.sol\":{\"keccak256\":\"0x92d75cd3227c87119ced7dba2474496fe475d3d18289fd53423e071714745454\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd963e7c5b132fab861b8a769fb112b66aca7963ed61878c85db95a6a2fce068\",\"dweb:/ipfs/QmUxjd9nXwgrnaLFjW9ZbZb22m8YmrXZWRaupWBT8a2oKz\"]},\"project:/contracts/UniswapV2/interfaces/IAKUniswapV2Callee.sol\":{\"keccak256\":\"0x6f6c45726f47a96042a324ea2a0e3785a093a9313802e4f1a19b0ac1fb17806a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e38b14d04a3b5e20e690500a6cac4f9d7d72b015c34143ad7a397a7fa2ce251b\",\"dweb:/ipfs/QmRpwRU9BN9YYzvM27DLFb2x1QTFerUW7WNmd9CRyZjUuT\"]},\"project:/contracts/UniswapV2/interfaces/IAKUniswapV2ERC20.sol\":{\"keccak256\":\"0xd9d4d459ec57bc4baefed5839158ac1386d6fe16efdc8a00618514e517128e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edd29d557b69a0b48043807a4d0bfaee500aa09c60ba0acf68b3e06f5e86b2b7\",\"dweb:/ipfs/QmS48T6BX8br4HQpt15f4AEkm7GHzJY4F6n3d6o3AW1Cku\"]},\"project:/contracts/UniswapV2/interfaces/IAKUniswapV2Factory.sol\":{\"keccak256\":\"0xf38615137e7045c111f143e5aa3f597da101b6a7a2e080b2df78cf078754cf6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81e2843273fa5a997cc84ebed0d9961637890ff86ec540b1b1367b889cbf18b0\",\"dweb:/ipfs/QmddBP1AweANRPyLxRQmRzYEkVnwAhS12T4ZBVTsEszLE4\"]},\"project:/contracts/UniswapV2/interfaces/IAKUniswapV2Pair.sol\":{\"keccak256\":\"0x4099dac45a0854d5e8168c73cc6c1cfc485a68bc94b8393c1097578893df539a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6a2b12f1bffe4a8bac363e9fc9c72ecdad66403291ba2ff7563c2cb7d772aa9\",\"dweb:/ipfs/QmbTFMD1wzxbfAWD2iHKTFsivvWas2ju5cGBPMhmPfYsvo\"]},\"project:/contracts/UniswapV2/interfaces/IERC20.sol\":{\"keccak256\":\"0x34967f1d256ed5c53b8ff6be4f67b3e2d1b560b197d87bbf19ea2430d7a9db88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1997dd5aaff3be178f40812e41400812aa18a4c21c51ce8ca28d0df0cd50e263\",\"dweb:/ipfs/QmeezKz6JF7SKXKZYBWm93zYy9BHhpkVCQksxnsjajVw1H\"]},\"project:/contracts/UniswapV2/libraries/Math.sol\":{\"keccak256\":\"0x6495267444c8a4f4858fd0af4e866f935d46f56589e0bd8885eff7fb654b6660\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294062bcd43953b3f5356be532b6de9a66d717db33bc25c37e00171fbc7d9633\",\"dweb:/ipfs/QmRaBkarpDnboKZcWHEPCPJhLWkVgus2GeFQUShCnewv8b\"]},\"project:/contracts/UniswapV2/libraries/UQ112x112.sol\":{\"keccak256\":\"0x0b4ab92eff855b1c19da0d2dbe54752320da7b433b510150f641cf108c72d066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a7c938c2bded85e67e75e667737d41b7e86ccabde6dc6d3584f64728c0cbfc9\",\"dweb:/ipfs/QmPGcaEZZPQBui68RadnDn9XBkZt8fN7MRb5iB6S2AKDGd\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162004d6c38038062004d6c833981810160405281019061003491906100de565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ab82610080565b9050919050565b6100bb816100a0565b81146100c657600080fd5b50565b6000815190506100d8816100b2565b92915050565b6000602082840312156100f4576100f361007b565b5b6000610102848285016100c9565b91505092915050565b614c51806200011b6000396000f3fe60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063a2e74af61162000063578063a2e74af61462000135578063c9c653961462000155578063e6a43905146200018b578063f46901ed14620001c15762000094565b8063017e7e581462000099578063094b741514620000bb5780631e3dd18b14620000dd578063574f2ba31462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a1c565b60405180910390f35b620000c562000205565b604051620000d4919062000a1c565b60405180910390f35b620000fb6004803603810190620000f5919062000a79565b6200022b565b6040516200010a919062000a1c565b60405180910390f35b6200011d6200026b565b6040516200012c919062000abc565b60405180910390f35b6200015360048036038101906200014d919062000b0a565b62000278565b005b6200017360048036038101906200016d919062000b3c565b6200034f565b60405162000182919062000a1c565b60405180910390f35b620001a96004803603810190620001a3919062000b3c565b620008b1565b604051620001b8919062000a1c565b60405180910390f35b620001df6004803603810190620001d9919062000b0a565b620008f3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200023c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003029062000be4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620003c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ba9062000c56565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200040257838562000405565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004739062000cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200058a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005819062000d3a565b60405180910390fd5b6000604051806020016200059e90620009c9565b6020820181038252601f19601f82011660405250905060008383604051602001620005cb92919062000dac565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200062c92919062000ddc565b600060405180830381600087803b1580156200064757600080fd5b505af11580156200065c573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200089f92919062000e09565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000986576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200097d9062000be4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b613de58062000e3783390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0482620009d7565b9050919050565b62000a1681620009f7565b82525050565b600060208201905062000a33600083018462000a0b565b92915050565b600080fd5b6000819050919050565b62000a538162000a3e565b811462000a5f57600080fd5b50565b60008135905062000a738162000a48565b92915050565b60006020828403121562000a925762000a9162000a39565b5b600062000aa28482850162000a62565b91505092915050565b62000ab68162000a3e565b82525050565b600060208201905062000ad3600083018462000aab565b92915050565b62000ae481620009f7565b811462000af057600080fd5b50565b60008135905062000b048162000ad9565b92915050565b60006020828403121562000b235762000b2262000a39565b5b600062000b338482850162000af3565b91505092915050565b6000806040838503121562000b565762000b5562000a39565b5b600062000b668582860162000af3565b925050602062000b798582860162000af3565b9150509250929050565b600082825260208201905092915050565b7f414b556e697377617056323a20464f5242494444454e00000000000000000000600082015250565b600062000bcc60168362000b83565b915062000bd98262000b94565b602082019050919050565b6000602082019050818103600083015262000bff8162000bbd565b9050919050565b7f414b556e697377617056323a204944454e544943414c5f414444524553534553600082015250565b600062000c3e60208362000b83565b915062000c4b8262000c06565b602082019050919050565b6000602082019050818103600083015262000c718162000c2f565b9050919050565b7f414b556e697377617056323a205a45524f5f4144445245535300000000000000600082015250565b600062000cb060198362000b83565b915062000cbd8262000c78565b602082019050919050565b6000602082019050818103600083015262000ce38162000ca1565b9050919050565b7f414b556e697377617056323a20504149525f4558495354530000000000000000600082015250565b600062000d2260188362000b83565b915062000d2f8262000cea565b602082019050919050565b6000602082019050818103600083015262000d558162000d13565b9050919050565b60008160601b9050919050565b600062000d768262000d5c565b9050919050565b600062000d8a8262000d69565b9050919050565b62000da662000da082620009f7565b62000d7d565b82525050565b600062000dba828562000d91565b60148201915062000dcc828462000d91565b6014820191508190509392505050565b600060408201905062000df3600083018562000a0b565b62000e02602083018462000a0b565b9392505050565b600060408201905062000e20600083018562000a0b565b62000e2f602083018462000aab565b939250505056fe60806040526001600c553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600c81526020017f414b556e69737761702056320000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf959493929190620001ae565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6000819050919050565b620001488162000133565b82525050565b6000819050919050565b62000163816200014e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b600060a082019050620001c560008301886200013d565b620001d460208301876200013d565b620001e360408301866200013d565b620001f2606083018562000158565b6200020160808301846200019d565b9695505050505050565b613bca806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063ba9a7a5614610483578063bc25cf77146104a1578063c45a0155146104bd576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd116101665780633644e515116101405780633644e515146102e0578063485cc955146102fe5780635909c0d51461031a5780635a3d549314610338576101a9565b806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630dfe16811461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c391906129ee565b61054f565b005b6101d2610b62565b6040516101df9190612b0f565b60405180910390f35b6101f0610b9b565b6040516101ff93929190612b79565b60405180910390f35b610222600480360381019061021d9190612bb0565b610bf8565b60405161022f9190612c0b565b60405180910390f35b610240610c0f565b60405161024d9190612c35565b60405180910390f35b61025e610c35565b60405161026b9190612c5f565b60405180910390f35b61028e60048036038101906102899190612c7a565b610c3b565b60405161029b9190612c0b565b60405180910390f35b6102ac610d6b565b6040516102b99190612ce6565b60405180910390f35b6102ca610d92565b6040516102d79190612d1d565b60405180910390f35b6102e8610d97565b6040516102f59190612ce6565b60405180910390f35b61031860048036038101906103139190612d38565b610d9d565b005b610322610eb3565b60405161032f9190612c5f565b60405180910390f35b610340610eb9565b60405161034d9190612c5f565b60405180910390f35b610370600480360381019061036b9190612d78565b610ebf565b60405161037d9190612c5f565b60405180910390f35b6103a0600480360381019061039b9190612d78565b611278565b6040516103ad9190612c5f565b60405180910390f35b6103be611290565b6040516103cb9190612c5f565b60405180910390f35b6103ee60048036038101906103e99190612d78565b611296565b6040516103fb9190612c5f565b60405180910390f35b61041e60048036038101906104199190612d78565b6112ae565b60405161042c929190612da5565b60405180910390f35b61043d611743565b60405161044a9190612b0f565b60405180910390f35b61046d60048036038101906104689190612bb0565b61177c565b60405161047a9190612c0b565b60405180910390f35b61048b611793565b6040516104989190612c5f565b60405180910390f35b6104bb60048036038101906104b69190612d78565b611799565b005b6104c56119b7565b6040516104d29190612c35565b60405180910390f35b6104e36119dd565b6040516104f09190612c35565b60405180910390f35b610513600480360381019061050e9190612e26565b611a03565b005b61052f600480360381019061052a9190612d38565b611c2b565b60405161053c9190612c5f565b60405180910390f35b61054d611c50565b005b6001600c5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90612f14565b60405180910390fd5b6000600c8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190612fa6565b60405180910390fd5b6000806105f5610b9b565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e90613038565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906130a4565b60405180910390fd5b60008b111561077457610773828a8d611e21565b5b60008a111561078957610788818a8c611e21565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff166310d1e85c338d8d8c8c6040518663ffffffff1660e01b81526004016107d6959493929190613111565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190612c35565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190613174565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108be9190612c35565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190613174565b92505050600089856dffffffffffffffffffffffffffff1661092191906131d0565b831161092e576000610956565b89856dffffffffffffffffffffffffffff1661094a91906131d0565b8361095591906131d0565b5b9050600089856dffffffffffffffffffffffffffff1661097691906131d0565b83116109835760006109ab565b89856dffffffffffffffffffffffffffff1661099f91906131d0565b836109aa91906131d0565b5b905060008211806109bc5750600081115b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290613276565b60405180910390fd5b6000600383610a0a9190613296565b6103e886610a189190613296565b610a2291906131d0565b90506000600383610a339190613296565b6103e886610a419190613296565b610a4b91906131d0565b9050620f4240876dffffffffffffffffffffffffffff16896dffffffffffffffffffffffffffff16610a7d9190613296565b610a879190613296565b8183610a939190613296565b1015610ad4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acb9061333c565b60405180910390fd5b5050610ae284848888611fab565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b45949392919061335c565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600c81526020017f414b556e6973776170205632000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610c0533848461229f565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610d555781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d4d91906131d0565b925050819055505b610d6084848461238a565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e24906133ed565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c5414610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd90612f14565b60405180910390fd5b6000600c81905550600080610f19610b9b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f7b9190612c35565b602060405180830381865afa158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbc9190613174565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161101b9190612c35565b602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613174565b90506000846dffffffffffffffffffffffffffff168361107c91906131d0565b90506000846dffffffffffffffffffffffffffff168361109c91906131d0565b905060006110aa87876124a0565b905060008054905060008114156110f0576103e86110d284866110cd9190613296565b61264e565b6110dc91906131d0565b98506110eb60006103e86126c8565b611149565b611146886dffffffffffffffffffffffffffff1682866111109190613296565b61111a919061343c565b886dffffffffffffffffffffffffffff1683866111379190613296565b611141919061343c565b6127a0565b98505b6000891161118c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611183906134df565b60405180910390fd5b6111968a8a6126c8565b6111a286868a8a611fab565b8115611213576008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661120c9190613296565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f858560405161125b929190612da5565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c54146112f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ed90612f14565b60405180910390fd5b6000600c81905550600080611309610b9b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113979190612c35565b602060405180830381865afa1580156113b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d89190613174565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114159190612c35565b602060405180830381865afa158015611432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114569190613174565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006114a888886124a0565b90506000805490508085846114bd9190613296565b6114c7919061343c565b9a508084846114d69190613296565b6114e0919061343c565b995060008b1180156114f2575060008a115b611531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152890613571565b60405180910390fd5b61153b30846127b9565b611546878d8d611e21565b611551868d8c611e21565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161158a9190612c35565b602060405180830381865afa1580156115a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cb9190613174565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116069190612c35565b602060405180830381865afa158015611623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116479190613174565b935061165585858b8b611fab565b81156116c6576008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166116bf9190613296565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611725929190612da5565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600681526020017f554e492d5632000000000000000000000000000000000000000000000000000081525081565b600061178933848461238a565b6001905092915050565b6103e881565b6001600c54146117de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d590612f14565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506118ef8284600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161189f9190612c35565b602060405180830381865afa1580156118bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e09190613174565b6118ea91906131d0565b611e21565b6119aa81846008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161195a9190612c35565b602060405180830381865afa158015611977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199b9190613174565b6119a591906131d0565b611e21565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3d906135dd565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611ac2906135fd565b919050558a604051602001611adc96959493929190613646565b60405160208183030381529060405280519060200120604051602001611b0392919061371f565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611b409493929190613756565b6020604051602081039080840390855afa158015611b62573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611bd657508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0c906137e7565b60405180910390fd5b611c2089898961229f565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8c90612f14565b60405180910390fd5b6000600c81905550611e17600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611cfb9190612c35565b602060405180830381865afa158015611d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3c9190613174565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d979190612c35565b602060405180830381865afa158015611db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd89190613174565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16611fab565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611e8b929190613807565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611ef59190613877565b6000604051808303816000865af19150503d8060008114611f32576040519150601f19603f3d011682016040523d82523d6000602084013e611f37565b606091505b5091509150818015611f655750600081511480611f64575080806020019051810190611f6391906138ba565b5b5b611fa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9b90613933565b60405180910390fd5b5050505050565b6dffffffffffffffffffffffffffff80168411158015611fdb57506dffffffffffffffffffffffffffff80168311155b61201a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120119061399f565b60405180910390fd5b60006401000000004261202d91906139bf565b905060006008601c9054906101000a900463ffffffff168261204f91906139f0565b905060008163ffffffff1611801561207857506000846dffffffffffffffffffffffffffff1614155b801561209557506000836dffffffffffffffffffffffffffff1614155b1561219b578063ffffffff166120da856120ae86612891565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166128c590919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166121029190613296565b600960008282546121139190613a24565b925050819055508063ffffffff1661215a8461212e87612891565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166128c590919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166121829190613296565b600a60008282546121939190613a24565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1660405161228f929190613a7a565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161237d9190612c5f565b60405180910390a3505050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123d991906131d0565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461242f9190613a24565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516124939190612c5f565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125349190613ab8565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b5490508215612634576000811461262f5760006125b4856dffffffffffffffffffffffffffff16876dffffffffffffffffffffffffffff166125af9190613296565b61264e565b905060006125c18361264e565b90508082111561262c57600081836125d991906131d0565b6000546125e69190613296565b90506000826005856125f89190613296565b6126029190613a24565b905060008183612612919061343c565b905060008111156126285761262787826126c8565b5b5050505b50505b612646565b60008114612645576000600b819055505b5b505092915050565b600060038211156126b5578190506000600160028461266d919061343c565b6126779190613a24565b90505b818110156126af578091506002818285612694919061343c565b61269e9190613a24565b6126a8919061343c565b905061267a565b506126c3565b600082146126c257600190505b5b919050565b806000808282546126d99190613a24565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461272f9190613a24565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127949190612c5f565b60405180910390a35050565b60008183106127af57816127b1565b825b905092915050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461280891906131d0565b925050819055508060008082825461282091906131d0565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128859190612c5f565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff166128be9190613b0d565b9050919050565b6000816dffffffffffffffffffffffffffff16836128e39190613b63565b905092915050565b600080fd5b600080fd5b6000819050919050565b612908816128f5565b811461291357600080fd5b50565b600081359050612925816128ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129568261292b565b9050919050565b6129668161294b565b811461297157600080fd5b50565b6000813590506129838161295d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126129ae576129ad612989565b5b8235905067ffffffffffffffff8111156129cb576129ca61298e565b5b6020830191508360018202830111156129e7576129e6612993565b5b9250929050565b600080600080600060808688031215612a0a57612a096128eb565b5b6000612a1888828901612916565b9550506020612a2988828901612916565b9450506040612a3a88828901612974565b935050606086013567ffffffffffffffff811115612a5b57612a5a6128f0565b5b612a6788828901612998565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ab0578082015181840152602081019050612a95565b83811115612abf576000848401525b50505050565b6000601f19601f8301169050919050565b6000612ae182612a76565b612aeb8185612a81565b9350612afb818560208601612a92565b612b0481612ac5565b840191505092915050565b60006020820190508181036000830152612b298184612ad6565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612b5481612b31565b82525050565b600063ffffffff82169050919050565b612b7381612b5a565b82525050565b6000606082019050612b8e6000830186612b4b565b612b9b6020830185612b4b565b612ba86040830184612b6a565b949350505050565b60008060408385031215612bc757612bc66128eb565b5b6000612bd585828601612974565b9250506020612be685828601612916565b9150509250929050565b60008115159050919050565b612c0581612bf0565b82525050565b6000602082019050612c206000830184612bfc565b92915050565b612c2f8161294b565b82525050565b6000602082019050612c4a6000830184612c26565b92915050565b612c59816128f5565b82525050565b6000602082019050612c746000830184612c50565b92915050565b600080600060608486031215612c9357612c926128eb565b5b6000612ca186828701612974565b9350506020612cb286828701612974565b9250506040612cc386828701612916565b9150509250925092565b6000819050919050565b612ce081612ccd565b82525050565b6000602082019050612cfb6000830184612cd7565b92915050565b600060ff82169050919050565b612d1781612d01565b82525050565b6000602082019050612d326000830184612d0e565b92915050565b60008060408385031215612d4f57612d4e6128eb565b5b6000612d5d85828601612974565b9250506020612d6e85828601612974565b9150509250929050565b600060208284031215612d8e57612d8d6128eb565b5b6000612d9c84828501612974565b91505092915050565b6000604082019050612dba6000830185612c50565b612dc76020830184612c50565b9392505050565b612dd781612d01565b8114612de257600080fd5b50565b600081359050612df481612dce565b92915050565b612e0381612ccd565b8114612e0e57600080fd5b50565b600081359050612e2081612dfa565b92915050565b600080600080600080600060e0888a031215612e4557612e446128eb565b5b6000612e538a828b01612974565b9750506020612e648a828b01612974565b9650506040612e758a828b01612916565b9550506060612e868a828b01612916565b9450506080612e978a828b01612de5565b93505060a0612ea88a828b01612e11565b92505060c0612eb98a828b01612e11565b91505092959891949750929550565b7f556e697377617056323a204c4f434b4544000000000000000000000000000000600082015250565b6000612efe601183612a81565b9150612f0982612ec8565b602082019050919050565b60006020820190508181036000830152612f2d81612ef1565b9050919050565b7f556e697377617056323a20494e53554646494349454e545f4f55545055545f4160008201527f4d4f554e54000000000000000000000000000000000000000000000000000000602082015250565b6000612f90602583612a81565b9150612f9b82612f34565b604082019050919050565b60006020820190508181036000830152612fbf81612f83565b9050919050565b7f556e697377617056323a20494e53554646494349454e545f4c4951554944495460008201527f5900000000000000000000000000000000000000000000000000000000000000602082015250565b6000613022602183612a81565b915061302d82612fc6565b604082019050919050565b6000602082019050818103600083015261305181613015565b9050919050565b7f556e697377617056323a20494e56414c49445f544f0000000000000000000000600082015250565b600061308e601583612a81565b915061309982613058565b602082019050919050565b600060208201905081810360008301526130bd81613081565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b60006130f083856130c4565b93506130fd8385846130d5565b61310683612ac5565b840190509392505050565b60006080820190506131266000830188612c26565b6131336020830187612c50565b6131406040830186612c50565b81810360608301526131538184866130e4565b90509695505050505050565b60008151905061316e816128ff565b92915050565b60006020828403121561318a576131896128eb565b5b60006131988482850161315f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006131db826128f5565b91506131e6836128f5565b9250828210156131f9576131f86131a1565b5b828203905092915050565b7f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60008201527f4f554e5400000000000000000000000000000000000000000000000000000000602082015250565b6000613260602483612a81565b915061326b82613204565b604082019050919050565b6000602082019050818103600083015261328f81613253565b9050919050565b60006132a1826128f5565b91506132ac836128f5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132e5576132e46131a1565b5b828202905092915050565b7f556e697377617056323a204b0000000000000000000000000000000000000000600082015250565b6000613326600c83612a81565b9150613331826132f0565b602082019050919050565b6000602082019050818103600083015261335581613319565b9050919050565b60006080820190506133716000830187612c50565b61337e6020830186612c50565b61338b6040830185612c50565b6133986060830184612c50565b95945050505050565b7f556e697377617056323a20464f5242494444454e000000000000000000000000600082015250565b60006133d7601483612a81565b91506133e2826133a1565b602082019050919050565b60006020820190508181036000830152613406816133ca565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613447826128f5565b9150613452836128f5565b9250826134625761346161340d565b5b828204905092915050565b7f556e697377617056323a20494e53554646494349454e545f4c4951554944495460008201527f595f4d494e544544000000000000000000000000000000000000000000000000602082015250565b60006134c9602883612a81565b91506134d48261346d565b604082019050919050565b600060208201905081810360008301526134f8816134bc565b9050919050565b7f556e697377617056323a20494e53554646494349454e545f4c4951554944495460008201527f595f4255524e4544000000000000000000000000000000000000000000000000602082015250565b600061355b602883612a81565b9150613566826134ff565b604082019050919050565b6000602082019050818103600083015261358a8161354e565b9050919050565b7f556e697377617056323a20455850495245440000000000000000000000000000600082015250565b60006135c7601283612a81565b91506135d282613591565b602082019050919050565b600060208201905081810360008301526135f6816135ba565b9050919050565b6000613608826128f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561363b5761363a6131a1565b5b600182019050919050565b600060c08201905061365b6000830189612cd7565b6136686020830188612c26565b6136756040830187612c26565b6136826060830186612c50565b61368f6080830185612c50565b61369c60a0830184612c50565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006136e86002836136a7565b91506136f3826136b2565b600282019050919050565b6000819050919050565b61371961371482612ccd565b6136fe565b82525050565b600061372a826136db565b91506137368285613708565b6020820191506137468284613708565b6020820191508190509392505050565b600060808201905061376b6000830187612cd7565b6137786020830186612d0e565b6137856040830185612cd7565b6137926060830184612cd7565b95945050505050565b7f556e697377617056323a20494e56414c49445f5349474e415455524500000000600082015250565b60006137d1601c83612a81565b91506137dc8261379b565b602082019050919050565b60006020820190508181036000830152613800816137c4565b9050919050565b600060408201905061381c6000830185612c26565b6138296020830184612c50565b9392505050565b600081519050919050565b600081905092915050565b600061385182613830565b61385b818561383b565b935061386b818560208601612a92565b80840191505092915050565b60006138838284613846565b915081905092915050565b61389781612bf0565b81146138a257600080fd5b50565b6000815190506138b48161388e565b92915050565b6000602082840312156138d0576138cf6128eb565b5b60006138de848285016138a5565b91505092915050565b7f556e697377617056323a205452414e534645525f4641494c4544000000000000600082015250565b600061391d601a83612a81565b9150613928826138e7565b602082019050919050565b6000602082019050818103600083015261394c81613910565b9050919050565b7f556e697377617056323a204f564552464c4f5700000000000000000000000000600082015250565b6000613989601383612a81565b915061399482613953565b602082019050919050565b600060208201905081810360008301526139b88161397c565b9050919050565b60006139ca826128f5565b91506139d5836128f5565b9250826139e5576139e461340d565b5b828206905092915050565b60006139fb82612b5a565b9150613a0683612b5a565b925082821015613a1957613a186131a1565b5b828203905092915050565b6000613a2f826128f5565b9150613a3a836128f5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613a6f57613a6e6131a1565b5b828201905092915050565b6000604082019050613a8f6000830185612b4b565b613a9c6020830184612b4b565b9392505050565b600081519050613ab28161295d565b92915050565b600060208284031215613ace57613acd6128eb565b5b6000613adc84828501613aa3565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613b1882613ae5565b9150613b2383613ae5565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b5857613b576131a1565b5b828202905092915050565b6000613b6e82613ae5565b9150613b7983613ae5565b925082613b8957613b8861340d565b5b82820490509291505056fea264697066735822122050d3ca15127076cb0630e9aeee2e7bc78d39e6b417f1ff61b929eb9eea4e6ad064736f6c634300080a0033a26469706673582212209493d543b8a0fbcffbadd2ffedf6f1b39a0ab1a6f1a2856f4d9a9fe71dce71b564736f6c634300080a0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063a2e74af61162000063578063a2e74af61462000135578063c9c653961462000155578063e6a43905146200018b578063f46901ed14620001c15762000094565b8063017e7e581462000099578063094b741514620000bb5780631e3dd18b14620000dd578063574f2ba31462000113575b600080fd5b620000a3620001e1565b604051620000b2919062000a1c565b60405180910390f35b620000c562000205565b604051620000d4919062000a1c565b60405180910390f35b620000fb6004803603810190620000f5919062000a79565b6200022b565b6040516200010a919062000a1c565b60405180910390f35b6200011d6200026b565b6040516200012c919062000abc565b60405180910390f35b6200015360048036038101906200014d919062000b0a565b62000278565b005b6200017360048036038101906200016d919062000b3c565b6200034f565b60405162000182919062000a1c565b60405180910390f35b620001a96004803603810190620001a3919062000b3c565b620008b1565b604051620001b8919062000a1c565b60405180910390f35b620001df6004803603810190620001d9919062000b0a565b620008f3565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600381815481106200023c57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200030b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003029062000be4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620003c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ba9062000c56565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106200040257838562000405565b84845b91509150600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200047c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004739062000cc8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146200058a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005819062000d3a565b60405180910390fd5b6000604051806020016200059e90620009c9565b6020820181038252601f19601f82011660405250905060008383604051602001620005cb92919062000dac565b604051602081830303815290604052805190602001209050808251602084016000f594508473ffffffffffffffffffffffffffffffffffffffff1663485cc95585856040518363ffffffff1660e01b81526004016200062c92919062000ddc565b600060405180830381600087803b1580156200064757600080fd5b505af11580156200065c573d6000803e3d6000fd5b5050505084600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9876003805490506040516200089f92919062000e09565b60405180910390a35050505092915050565b60026020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000986576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200097d9062000be4565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b613de58062000e3783390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000a0482620009d7565b9050919050565b62000a1681620009f7565b82525050565b600060208201905062000a33600083018462000a0b565b92915050565b600080fd5b6000819050919050565b62000a538162000a3e565b811462000a5f57600080fd5b50565b60008135905062000a738162000a48565b92915050565b60006020828403121562000a925762000a9162000a39565b5b600062000aa28482850162000a62565b91505092915050565b62000ab68162000a3e565b82525050565b600060208201905062000ad3600083018462000aab565b92915050565b62000ae481620009f7565b811462000af057600080fd5b50565b60008135905062000b048162000ad9565b92915050565b60006020828403121562000b235762000b2262000a39565b5b600062000b338482850162000af3565b91505092915050565b6000806040838503121562000b565762000b5562000a39565b5b600062000b668582860162000af3565b925050602062000b798582860162000af3565b9150509250929050565b600082825260208201905092915050565b7f414b556e697377617056323a20464f5242494444454e00000000000000000000600082015250565b600062000bcc60168362000b83565b915062000bd98262000b94565b602082019050919050565b6000602082019050818103600083015262000bff8162000bbd565b9050919050565b7f414b556e697377617056323a204944454e544943414c5f414444524553534553600082015250565b600062000c3e60208362000b83565b915062000c4b8262000c06565b602082019050919050565b6000602082019050818103600083015262000c718162000c2f565b9050919050565b7f414b556e697377617056323a205a45524f5f4144445245535300000000000000600082015250565b600062000cb060198362000b83565b915062000cbd8262000c78565b602082019050919050565b6000602082019050818103600083015262000ce38162000ca1565b9050919050565b7f414b556e697377617056323a20504149525f4558495354530000000000000000600082015250565b600062000d2260188362000b83565b915062000d2f8262000cea565b602082019050919050565b6000602082019050818103600083015262000d558162000d13565b9050919050565b60008160601b9050919050565b600062000d768262000d5c565b9050919050565b600062000d8a8262000d69565b9050919050565b62000da662000da082620009f7565b62000d7d565b82525050565b600062000dba828562000d91565b60148201915062000dcc828462000d91565b6014820191508190509392505050565b600060408201905062000df3600083018562000a0b565b62000e02602083018462000a0b565b9392505050565b600060408201905062000e20600083018562000a0b565b62000e2f602083018462000aab565b939250505056fe60806040526001600c553480156200001657600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6040518060400160405280600c81526020017f414b556e69737761702056320000000000000000000000000000000000000000815250805190602001206040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250805190602001208330604051602001620000cf959493929190620001ae565b604051602081830303815290604052805190602001206003819055505033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200020b565b6000819050919050565b620001488162000133565b82525050565b6000819050919050565b62000163816200014e565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b600060a082019050620001c560008301886200013d565b620001d460208301876200013d565b620001e360408301866200013d565b620001f2606083018562000158565b6200020160808301846200019d565b9695505050505050565b613bca806200021b6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a7146104db578063d505accf146104f9578063dd62ed3e14610515578063fff6cae914610545576101a9565b8063ba9a7a5614610483578063bc25cf77146104a1578063c45a0155146104bd576101a9565b80637ecebe00116100d35780637ecebe00146103d457806389afcb441461040457806395d89b4114610435578063a9059cbb14610453576101a9565b80636a6278421461035657806370a08231146103865780637464fc3d146103b6576101a9565b806323b872dd116101665780633644e515116101405780633644e515146102e0578063485cc955146102fe5780635909c0d51461031a5780635a3d549314610338576101a9565b806323b872dd1461027457806330adf81f146102a4578063313ce567146102c2576101a9565b8063022c0d9f146101ae57806306fdde03146101ca5780630902f1ac146101e8578063095ea7b3146102085780630dfe16811461023857806318160ddd14610256575b600080fd5b6101c860048036038101906101c391906129ee565b61054f565b005b6101d2610b62565b6040516101df9190612b0f565b60405180910390f35b6101f0610b9b565b6040516101ff93929190612b79565b60405180910390f35b610222600480360381019061021d9190612bb0565b610bf8565b60405161022f9190612c0b565b60405180910390f35b610240610c0f565b60405161024d9190612c35565b60405180910390f35b61025e610c35565b60405161026b9190612c5f565b60405180910390f35b61028e60048036038101906102899190612c7a565b610c3b565b60405161029b9190612c0b565b60405180910390f35b6102ac610d6b565b6040516102b99190612ce6565b60405180910390f35b6102ca610d92565b6040516102d79190612d1d565b60405180910390f35b6102e8610d97565b6040516102f59190612ce6565b60405180910390f35b61031860048036038101906103139190612d38565b610d9d565b005b610322610eb3565b60405161032f9190612c5f565b60405180910390f35b610340610eb9565b60405161034d9190612c5f565b60405180910390f35b610370600480360381019061036b9190612d78565b610ebf565b60405161037d9190612c5f565b60405180910390f35b6103a0600480360381019061039b9190612d78565b611278565b6040516103ad9190612c5f565b60405180910390f35b6103be611290565b6040516103cb9190612c5f565b60405180910390f35b6103ee60048036038101906103e99190612d78565b611296565b6040516103fb9190612c5f565b60405180910390f35b61041e60048036038101906104199190612d78565b6112ae565b60405161042c929190612da5565b60405180910390f35b61043d611743565b60405161044a9190612b0f565b60405180910390f35b61046d60048036038101906104689190612bb0565b61177c565b60405161047a9190612c0b565b60405180910390f35b61048b611793565b6040516104989190612c5f565b60405180910390f35b6104bb60048036038101906104b69190612d78565b611799565b005b6104c56119b7565b6040516104d29190612c35565b60405180910390f35b6104e36119dd565b6040516104f09190612c35565b60405180910390f35b610513600480360381019061050e9190612e26565b611a03565b005b61052f600480360381019061052a9190612d38565b611c2b565b60405161053c9190612c5f565b60405180910390f35b61054d611c50565b005b6001600c5414610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90612f14565b60405180910390fd5b6000600c8190555060008511806105ab5750600084115b6105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e190612fa6565b60405180910390fd5b6000806105f5610b9b565b5091509150816dffffffffffffffffffffffffffff16871080156106285750806dffffffffffffffffffffffffffff1686105b610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065e90613038565b60405180910390fd5b6000806000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508173ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161415801561072057508073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff1614155b61075f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610756906130a4565b60405180910390fd5b60008b111561077457610773828a8d611e21565b5b60008a111561078957610788818a8c611e21565b5b6000888890501115610809578873ffffffffffffffffffffffffffffffffffffffff166310d1e85c338d8d8c8c6040518663ffffffff1660e01b81526004016107d6959493929190613111565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b505050505b8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108429190612c35565b602060405180830381865afa15801561085f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108839190613174565b93508073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108be9190612c35565b602060405180830381865afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff9190613174565b92505050600089856dffffffffffffffffffffffffffff1661092191906131d0565b831161092e576000610956565b89856dffffffffffffffffffffffffffff1661094a91906131d0565b8361095591906131d0565b5b9050600089856dffffffffffffffffffffffffffff1661097691906131d0565b83116109835760006109ab565b89856dffffffffffffffffffffffffffff1661099f91906131d0565b836109aa91906131d0565b5b905060008211806109bc5750600081115b6109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290613276565b60405180910390fd5b6000600383610a0a9190613296565b6103e886610a189190613296565b610a2291906131d0565b90506000600383610a339190613296565b6103e886610a419190613296565b610a4b91906131d0565b9050620f4240876dffffffffffffffffffffffffffff16896dffffffffffffffffffffffffffff16610a7d9190613296565b610a879190613296565b8183610a939190613296565b1015610ad4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acb9061333c565b60405180910390fd5b5050610ae284848888611fab565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d82284848f8f604051610b45949392919061335c565b60405180910390a35050505050506001600c819055505050505050565b6040518060400160405280600c81526020017f414b556e6973776170205632000000000000000000000000000000000000000081525081565b6000806000600860009054906101000a90046dffffffffffffffffffffffffffff1692506008600e9054906101000a90046dffffffffffffffffffffffffffff1691506008601c9054906101000a900463ffffffff169050909192565b6000610c0533848461229f565b6001905092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b600080600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610d555781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d4d91906131d0565b925050819055505b610d6084848461238a565b600190509392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b81565b601281565b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e24906133ed565b60405180910390fd5b81600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60095481565b600a5481565b60006001600c5414610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd90612f14565b60405180910390fd5b6000600c81905550600080610f19610b9b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f7b9190612c35565b602060405180830381865afa158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbc9190613174565b90506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161101b9190612c35565b602060405180830381865afa158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190613174565b90506000846dffffffffffffffffffffffffffff168361107c91906131d0565b90506000846dffffffffffffffffffffffffffff168361109c91906131d0565b905060006110aa87876124a0565b905060008054905060008114156110f0576103e86110d284866110cd9190613296565b61264e565b6110dc91906131d0565b98506110eb60006103e86126c8565b611149565b611146886dffffffffffffffffffffffffffff1682866111109190613296565b61111a919061343c565b886dffffffffffffffffffffffffffff1683866111379190613296565b611141919061343c565b6127a0565b98505b6000891161118c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611183906134df565b60405180910390fd5b6111968a8a6126c8565b6111a286868a8a611fab565b8115611213576008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1661120c9190613296565b600b819055505b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f858560405161125b929190612da5565b60405180910390a250505050505050506001600c81905550919050565b60016020528060005260406000206000915090505481565b600b5481565b60046020528060005260406000206000915090505481565b6000806001600c54146112f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ed90612f14565b60405180910390fd5b6000600c81905550600080611309610b9b565b50915091506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113979190612c35565b602060405180830381865afa1580156113b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d89190613174565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016114159190612c35565b602060405180830381865afa158015611432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114569190613174565b90506000600160003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006114a888886124a0565b90506000805490508085846114bd9190613296565b6114c7919061343c565b9a508084846114d69190613296565b6114e0919061343c565b995060008b1180156114f2575060008a115b611531576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152890613571565b60405180910390fd5b61153b30846127b9565b611546878d8d611e21565b611551868d8c611e21565b8673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161158a9190612c35565b602060405180830381865afa1580156115a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cb9190613174565b94508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116069190612c35565b602060405180830381865afa158015611623573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116479190613174565b935061165585858b8b611fab565b81156116c6576008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166116bf9190613296565b600b819055505b8b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364968d8d604051611725929190612da5565b60405180910390a35050505050505050506001600c81905550915091565b6040518060400160405280600681526020017f554e492d5632000000000000000000000000000000000000000000000000000081525081565b600061178933848461238a565b6001905092915050565b6103e881565b6001600c54146117de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117d590612f14565b60405180910390fd5b6000600c819055506000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506118ef8284600860009054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161189f9190612c35565b602060405180830381865afa1580156118bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118e09190613174565b6118ea91906131d0565b611e21565b6119aa81846008600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161195a9190612c35565b602060405180830381865afa158015611977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199b9190613174565b6119a591906131d0565b611e21565b50506001600c8190555050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b42841015611a46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3d906135dd565b60405180910390fd5b60006003547f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c960001b898989600460008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190611ac2906135fd565b919050558a604051602001611adc96959493929190613646565b60405160208183030381529060405280519060200120604051602001611b0392919061371f565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051611b409493929190613756565b6020604051602081039080840390855afa158015611b62573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611bd657508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c0c906137e7565b60405180910390fd5b611c2089898961229f565b505050505050505050565b6002602052816000526040600020602052806000526040600020600091509150505481565b6001600c5414611c95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c8c90612f14565b60405180910390fd5b6000600c81905550611e17600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611cfb9190612c35565b602060405180830381865afa158015611d18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3c9190613174565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611d979190612c35565b602060405180830381865afa158015611db4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd89190613174565b600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff16611fab565b6001600c81905550565b6000808473ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601981526020017f7472616e7366657228616464726573732c75696e743235362900000000000000815250805190602001208585604051602401611e8b929190613807565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051611ef59190613877565b6000604051808303816000865af19150503d8060008114611f32576040519150601f19603f3d011682016040523d82523d6000602084013e611f37565b606091505b5091509150818015611f655750600081511480611f64575080806020019051810190611f6391906138ba565b5b5b611fa4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9b90613933565b60405180910390fd5b5050505050565b6dffffffffffffffffffffffffffff80168411158015611fdb57506dffffffffffffffffffffffffffff80168311155b61201a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120119061399f565b60405180910390fd5b60006401000000004261202d91906139bf565b905060006008601c9054906101000a900463ffffffff168261204f91906139f0565b905060008163ffffffff1611801561207857506000846dffffffffffffffffffffffffffff1614155b801561209557506000836dffffffffffffffffffffffffffff1614155b1561219b578063ffffffff166120da856120ae86612891565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166128c590919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166121029190613296565b600960008282546121139190613a24565b925050819055508063ffffffff1661215a8461212e87612891565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166128c590919063ffffffff16565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166121829190613296565b600a60008282546121939190613a24565b925050819055505b85600860006101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550846008600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff160217905550816008601c6101000a81548163ffffffff021916908363ffffffff1602179055507f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1600860009054906101000a90046dffffffffffffffffffffffffffff166008600e9054906101000a90046dffffffffffffffffffffffffffff1660405161228f929190613a7a565b60405180910390a1505050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161237d9190612c5f565b60405180910390a3505050565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546123d991906131d0565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461242f9190613a24565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516124939190612c5f565b60405180910390a3505050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa158015612510573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125349190613ab8565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141591506000600b5490508215612634576000811461262f5760006125b4856dffffffffffffffffffffffffffff16876dffffffffffffffffffffffffffff166125af9190613296565b61264e565b905060006125c18361264e565b90508082111561262c57600081836125d991906131d0565b6000546125e69190613296565b90506000826005856125f89190613296565b6126029190613a24565b905060008183612612919061343c565b905060008111156126285761262787826126c8565b5b5050505b50505b612646565b60008114612645576000600b819055505b5b505092915050565b600060038211156126b5578190506000600160028461266d919061343c565b6126779190613a24565b90505b818110156126af578091506002818285612694919061343c565b61269e9190613a24565b6126a8919061343c565b905061267a565b506126c3565b600082146126c257600190505b5b919050565b806000808282546126d99190613a24565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461272f9190613a24565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516127949190612c5f565b60405180910390a35050565b60008183106127af57816127b1565b825b905092915050565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461280891906131d0565b925050819055508060008082825461282091906131d0565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516128859190612c5f565b60405180910390a35050565b60006e010000000000000000000000000000826dffffffffffffffffffffffffffff166128be9190613b0d565b9050919050565b6000816dffffffffffffffffffffffffffff16836128e39190613b63565b905092915050565b600080fd5b600080fd5b6000819050919050565b612908816128f5565b811461291357600080fd5b50565b600081359050612925816128ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006129568261292b565b9050919050565b6129668161294b565b811461297157600080fd5b50565b6000813590506129838161295d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126129ae576129ad612989565b5b8235905067ffffffffffffffff8111156129cb576129ca61298e565b5b6020830191508360018202830111156129e7576129e6612993565b5b9250929050565b600080600080600060808688031215612a0a57612a096128eb565b5b6000612a1888828901612916565b9550506020612a2988828901612916565b9450506040612a3a88828901612974565b935050606086013567ffffffffffffffff811115612a5b57612a5a6128f0565b5b612a6788828901612998565b92509250509295509295909350565b600081519050919050565b600082825260208201905092915050565b60005b83811015612ab0578082015181840152602081019050612a95565b83811115612abf576000848401525b50505050565b6000601f19601f8301169050919050565b6000612ae182612a76565b612aeb8185612a81565b9350612afb818560208601612a92565b612b0481612ac5565b840191505092915050565b60006020820190508181036000830152612b298184612ad6565b905092915050565b60006dffffffffffffffffffffffffffff82169050919050565b612b5481612b31565b82525050565b600063ffffffff82169050919050565b612b7381612b5a565b82525050565b6000606082019050612b8e6000830186612b4b565b612b9b6020830185612b4b565b612ba86040830184612b6a565b949350505050565b60008060408385031215612bc757612bc66128eb565b5b6000612bd585828601612974565b9250506020612be685828601612916565b9150509250929050565b60008115159050919050565b612c0581612bf0565b82525050565b6000602082019050612c206000830184612bfc565b92915050565b612c2f8161294b565b82525050565b6000602082019050612c4a6000830184612c26565b92915050565b612c59816128f5565b82525050565b6000602082019050612c746000830184612c50565b92915050565b600080600060608486031215612c9357612c926128eb565b5b6000612ca186828701612974565b9350506020612cb286828701612974565b9250506040612cc386828701612916565b9150509250925092565b6000819050919050565b612ce081612ccd565b82525050565b6000602082019050612cfb6000830184612cd7565b92915050565b600060ff82169050919050565b612d1781612d01565b82525050565b6000602082019050612d326000830184612d0e565b92915050565b60008060408385031215612d4f57612d4e6128eb565b5b6000612d5d85828601612974565b9250506020612d6e85828601612974565b9150509250929050565b600060208284031215612d8e57612d8d6128eb565b5b6000612d9c84828501612974565b91505092915050565b6000604082019050612dba6000830185612c50565b612dc76020830184612c50565b9392505050565b612dd781612d01565b8114612de257600080fd5b50565b600081359050612df481612dce565b92915050565b612e0381612ccd565b8114612e0e57600080fd5b50565b600081359050612e2081612dfa565b92915050565b600080600080600080600060e0888a031215612e4557612e446128eb565b5b6000612e538a828b01612974565b9750506020612e648a828b01612974565b9650506040612e758a828b01612916565b9550506060612e868a828b01612916565b9450506080612e978a828b01612de5565b93505060a0612ea88a828b01612e11565b92505060c0612eb98a828b01612e11565b91505092959891949750929550565b7f556e697377617056323a204c4f434b4544000000000000000000000000000000600082015250565b6000612efe601183612a81565b9150612f0982612ec8565b602082019050919050565b60006020820190508181036000830152612f2d81612ef1565b9050919050565b7f556e697377617056323a20494e53554646494349454e545f4f55545055545f4160008201527f4d4f554e54000000000000000000000000000000000000000000000000000000602082015250565b6000612f90602583612a81565b9150612f9b82612f34565b604082019050919050565b60006020820190508181036000830152612fbf81612f83565b9050919050565b7f556e697377617056323a20494e53554646494349454e545f4c4951554944495460008201527f5900000000000000000000000000000000000000000000000000000000000000602082015250565b6000613022602183612a81565b915061302d82612fc6565b604082019050919050565b6000602082019050818103600083015261305181613015565b9050919050565b7f556e697377617056323a20494e56414c49445f544f0000000000000000000000600082015250565b600061308e601583612a81565b915061309982613058565b602082019050919050565b600060208201905081810360008301526130bd81613081565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b60006130f083856130c4565b93506130fd8385846130d5565b61310683612ac5565b840190509392505050565b60006080820190506131266000830188612c26565b6131336020830187612c50565b6131406040830186612c50565b81810360608301526131538184866130e4565b90509695505050505050565b60008151905061316e816128ff565b92915050565b60006020828403121561318a576131896128eb565b5b60006131988482850161315f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006131db826128f5565b91506131e6836128f5565b9250828210156131f9576131f86131a1565b5b828203905092915050565b7f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60008201527f4f554e5400000000000000000000000000000000000000000000000000000000602082015250565b6000613260602483612a81565b915061326b82613204565b604082019050919050565b6000602082019050818103600083015261328f81613253565b9050919050565b60006132a1826128f5565b91506132ac836128f5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156132e5576132e46131a1565b5b828202905092915050565b7f556e697377617056323a204b0000000000000000000000000000000000000000600082015250565b6000613326600c83612a81565b9150613331826132f0565b602082019050919050565b6000602082019050818103600083015261335581613319565b9050919050565b60006080820190506133716000830187612c50565b61337e6020830186612c50565b61338b6040830185612c50565b6133986060830184612c50565b95945050505050565b7f556e697377617056323a20464f5242494444454e000000000000000000000000600082015250565b60006133d7601483612a81565b91506133e2826133a1565b602082019050919050565b60006020820190508181036000830152613406816133ca565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000613447826128f5565b9150613452836128f5565b9250826134625761346161340d565b5b828204905092915050565b7f556e697377617056323a20494e53554646494349454e545f4c4951554944495460008201527f595f4d494e544544000000000000000000000000000000000000000000000000602082015250565b60006134c9602883612a81565b91506134d48261346d565b604082019050919050565b600060208201905081810360008301526134f8816134bc565b9050919050565b7f556e697377617056323a20494e53554646494349454e545f4c4951554944495460008201527f595f4255524e4544000000000000000000000000000000000000000000000000602082015250565b600061355b602883612a81565b9150613566826134ff565b604082019050919050565b6000602082019050818103600083015261358a8161354e565b9050919050565b7f556e697377617056323a20455850495245440000000000000000000000000000600082015250565b60006135c7601283612a81565b91506135d282613591565b602082019050919050565b600060208201905081810360008301526135f6816135ba565b9050919050565b6000613608826128f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561363b5761363a6131a1565b5b600182019050919050565b600060c08201905061365b6000830189612cd7565b6136686020830188612c26565b6136756040830187612c26565b6136826060830186612c50565b61368f6080830185612c50565b61369c60a0830184612c50565b979650505050505050565b600081905092915050565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b60006136e86002836136a7565b91506136f3826136b2565b600282019050919050565b6000819050919050565b61371961371482612ccd565b6136fe565b82525050565b600061372a826136db565b91506137368285613708565b6020820191506137468284613708565b6020820191508190509392505050565b600060808201905061376b6000830187612cd7565b6137786020830186612d0e565b6137856040830185612cd7565b6137926060830184612cd7565b95945050505050565b7f556e697377617056323a20494e56414c49445f5349474e415455524500000000600082015250565b60006137d1601c83612a81565b91506137dc8261379b565b602082019050919050565b60006020820190508181036000830152613800816137c4565b9050919050565b600060408201905061381c6000830185612c26565b6138296020830184612c50565b9392505050565b600081519050919050565b600081905092915050565b600061385182613830565b61385b818561383b565b935061386b818560208601612a92565b80840191505092915050565b60006138838284613846565b915081905092915050565b61389781612bf0565b81146138a257600080fd5b50565b6000815190506138b48161388e565b92915050565b6000602082840312156138d0576138cf6128eb565b5b60006138de848285016138a5565b91505092915050565b7f556e697377617056323a205452414e534645525f4641494c4544000000000000600082015250565b600061391d601a83612a81565b9150613928826138e7565b602082019050919050565b6000602082019050818103600083015261394c81613910565b9050919050565b7f556e697377617056323a204f564552464c4f5700000000000000000000000000600082015250565b6000613989601383612a81565b915061399482613953565b602082019050919050565b600060208201905081810360008301526139b88161397c565b9050919050565b60006139ca826128f5565b91506139d5836128f5565b9250826139e5576139e461340d565b5b828206905092915050565b60006139fb82612b5a565b9150613a0683612b5a565b925082821015613a1957613a186131a1565b5b828203905092915050565b6000613a2f826128f5565b9150613a3a836128f5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613a6f57613a6e6131a1565b5b828201905092915050565b6000604082019050613a8f6000830185612b4b565b613a9c6020830184612b4b565b9392505050565b600081519050613ab28161295d565b92915050565b600060208284031215613ace57613acd6128eb565b5b6000613adc84828501613aa3565b91505092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613b1882613ae5565b9150613b2383613ae5565b9250817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b5857613b576131a1565b5b828202905092915050565b6000613b6e82613ae5565b9150613b7983613ae5565b925082613b8957613b8861340d565b5b82820490509291505056fea264697066735822122050d3ca15127076cb0630e9aeee2e7bc78d39e6b417f1ff61b929eb9eea4e6ad064736f6c634300080a0033a26469706673582212209493d543b8a0fbcffbadd2ffedf6f1b39a0ab1a6f1a2856f4d9a9fe71dce71b564736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:29",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:29"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:29",
                "type": ""
              }
            ],
            "src": "7:75:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:29"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:29"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:29",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:29",
                "type": ""
              }
            ],
            "src": "334:126:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:29",
                "type": ""
              }
            ],
            "src": "466:96:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:29"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:29"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:29",
                "type": ""
              }
            ],
            "src": "568:122:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:29"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:29",
                "type": ""
              }
            ],
            "src": "696:143:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:29",
                "type": ""
              }
            ],
            "src": "845:351:29"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8686:29",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:29",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:29",
                "type": ""
              }
            ],
            "src": "7:126:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "184:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "194:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "223:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "205:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "194:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "166:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "176:7:29",
                "type": ""
              }
            ],
            "src": "139:96:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:53:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "323:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "346:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "328:17:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:24:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "316:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "316:37:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "316:37:29"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "294:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "301:3:29",
                "type": ""
              }
            ],
            "src": "241:118:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "463:124:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "473:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "481:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "473:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "553:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "566:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "577:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "562:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "509:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "509:71:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "509:71:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "435:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "447:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "458:4:29",
                "type": ""
              }
            ],
            "src": "365:222:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:35:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "643:19:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "659:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "653:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "653:9:29"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "643:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "626:6:29",
                "type": ""
              }
            ],
            "src": "593:75:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "763:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "780:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "783:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:12:29"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "674:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "903:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "896:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "896:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "896:12:29"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "797:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:32:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "975:16:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "986:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "947:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "957:7:29",
                "type": ""
              }
            ],
            "src": "920:77:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:79:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1103:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1112:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1115:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1105:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1105:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1069:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1094:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1076:17:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1076:24:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1066:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1066:35:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1059:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1059:43:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1056:63:29"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1039:5:29",
                "type": ""
              }
            ],
            "src": "1003:122:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:87:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1193:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1215:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1202:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1202:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1193:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1258:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1231:26:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:33:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:33:29"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1161:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1169:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1177:5:29",
                "type": ""
              }
            ],
            "src": "1131:139:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1342:263:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1388:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1390:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1390:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1390:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1363:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1372:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1384:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1355:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1355:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1352:119:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1481:117:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1496:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1510:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1500:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1525:63:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1560:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1571:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1556:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1556:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1580:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1535:20:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1535:53:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1525:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1312:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1323:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1335:6:29",
                "type": ""
              }
            ],
            "src": "1276:329:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1716:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1698:17:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:24:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1686:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:37:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:37:29"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1664:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:29",
                "type": ""
              }
            ],
            "src": "1611:118:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:124:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1855:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1851:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1843:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1923:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1879:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:71:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:71:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:29",
                "type": ""
              }
            ],
            "src": "1735:222:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2006:79:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2063:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2072:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2075:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2065:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2065:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2065:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2029:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2054:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2036:17:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2036:24:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2026:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2026:35:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2019:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2019:43:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2016:63:29"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1999:5:29",
                "type": ""
              }
            ],
            "src": "1963:122:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2143:87:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2153:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2175:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2162:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2153:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2218:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2191:26:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:33:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2191:33:29"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2121:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2129:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2137:5:29",
                "type": ""
              }
            ],
            "src": "2091:139:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2302:263:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2348:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2350:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2350:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2350:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2323:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2319:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2319:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2344:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2315:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2315:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2312:119:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2441:117:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2456:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2470:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2460:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2485:63:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2520:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2531:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2516:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2516:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2540:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2495:20:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2495:53:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2485:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2272:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2283:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2295:6:29",
                "type": ""
              }
            ],
            "src": "2236:329:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2654:391:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2700:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2702:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2702:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2702:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2675:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2684:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2671:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2671:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2696:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2667:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2667:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2664:119:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2793:117:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2808:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2822:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2812:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2837:63:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2872:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2883:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2868:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2868:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2892:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2847:20:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:53:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2837:6:29"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2920:118:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2935:16:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2949:2:29",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2939:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2965:63:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3000:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3011:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2996:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2996:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3020:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2975:20:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2975:53:29"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2965:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2616:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2627:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2639:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2647:6:29",
                "type": ""
              }
            ],
            "src": "2571:474:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3147:73:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3164:3:29"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3169:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3157:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3157:19:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3157:19:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3185:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3204:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3209:4:29",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3200:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:14:29"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "3185:11:29"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3119:3:29",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "3124:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "3135:11:29",
                "type": ""
              }
            ],
            "src": "3051:169:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3332:66:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3354:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3362:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3350:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3350:14:29"
                      },
                      {
                        "hexValue": "414b556e697377617056323a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3366:24:29",
                        "type": "",
                        "value": "AKUniswapV2: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3343:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:48:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3343:48:29"
                }
              ]
            },
            "name": "store_literal_in_memory_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3324:6:29",
                "type": ""
              }
            ],
            "src": "3226:172:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3550:220:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3560:74:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3626:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3631:2:29",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3567:58:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3567:67:29"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3560:3:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3732:3:29"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                      "nodeType": "YulIdentifier",
                      "src": "3643:88:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3643:93:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3643:93:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3745:19:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3756:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3761:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3752:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3752:12:29"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3745:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3538:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3546:3:29",
                "type": ""
              }
            ],
            "src": "3404:366:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3947:248:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3957:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3969:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3980:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3965:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3965:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3957:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4004:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4015:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4000:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4000:17:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4023:4:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4029:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4019:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4019:20:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3993:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3993:47:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3993:47:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4049:139:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4183:4:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4057:124:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4057:131:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4049:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3927:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3942:4:29",
                "type": ""
              }
            ],
            "src": "3776:419:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4307:76:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4329:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4337:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4325:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4325:14:29"
                      },
                      {
                        "hexValue": "414b556e697377617056323a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4341:34:29",
                        "type": "",
                        "value": "AKUniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4318:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4318:58:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4318:58:29"
                }
              ]
            },
            "name": "store_literal_in_memory_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4299:6:29",
                "type": ""
              }
            ],
            "src": "4201:182:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4535:220:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4545:74:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4611:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4616:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4552:58:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4552:67:29"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4545:3:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4717:3:29"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff",
                      "nodeType": "YulIdentifier",
                      "src": "4628:88:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4628:93:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4628:93:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4730:19:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4741:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4746:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4737:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4737:12:29"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4730:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4523:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4531:3:29",
                "type": ""
              }
            ],
            "src": "4389:366:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4932:248:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4942:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4954:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4965:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4950:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4950:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4942:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4989:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5000:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4985:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4985:17:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5008:4:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5014:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5004:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5004:20:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4978:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4978:47:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4978:47:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5034:139:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5168:4:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5042:124:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5042:131:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5034:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4912:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4927:4:29",
                "type": ""
              }
            ],
            "src": "4761:419:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5292:69:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5314:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5322:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5310:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5310:14:29"
                      },
                      {
                        "hexValue": "414b556e697377617056323a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5326:27:29",
                        "type": "",
                        "value": "AKUniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5303:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5303:51:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5303:51:29"
                }
              ]
            },
            "name": "store_literal_in_memory_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5284:6:29",
                "type": ""
              }
            ],
            "src": "5186:175:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5513:220:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5523:74:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5589:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5594:2:29",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5530:58:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5530:67:29"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5523:3:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5695:3:29"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3",
                      "nodeType": "YulIdentifier",
                      "src": "5606:88:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5606:93:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5606:93:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5708:19:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5719:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5724:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5715:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5715:12:29"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5708:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5501:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5509:3:29",
                "type": ""
              }
            ],
            "src": "5367:366:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5910:248:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5920:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5932:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5943:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5928:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5928:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5920:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5967:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5978:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5963:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5963:17:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5986:4:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5992:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5982:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5982:20:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5956:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5956:47:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5956:47:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6012:139:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6146:4:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6020:124:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6020:131:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6012:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5890:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5905:4:29",
                "type": ""
              }
            ],
            "src": "5739:419:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6270:68:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6292:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6300:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6288:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6288:14:29"
                      },
                      {
                        "hexValue": "414b556e697377617056323a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6304:26:29",
                        "type": "",
                        "value": "AKUniswapV2: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6281:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6281:50:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6281:50:29"
                }
              ]
            },
            "name": "store_literal_in_memory_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6262:6:29",
                "type": ""
              }
            ],
            "src": "6164:174:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6490:220:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6500:74:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6566:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6571:2:29",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6507:58:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6507:67:29"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6500:3:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6672:3:29"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4",
                      "nodeType": "YulIdentifier",
                      "src": "6583:88:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6583:93:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6583:93:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6685:19:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6696:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6701:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6692:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6692:12:29"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6685:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6478:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6486:3:29",
                "type": ""
              }
            ],
            "src": "6344:366:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6887:248:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6897:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6909:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6920:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6905:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6905:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6897:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6944:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6955:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6940:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6940:17:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6963:4:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6969:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6959:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6959:20:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6933:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6933:47:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6933:47:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6989:139:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7123:4:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6997:124:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6997:131:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6989:4:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6867:9:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6882:4:29",
                "type": ""
              }
            ],
            "src": "6716:419:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7183:52:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7193:35:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7218:2:29",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7222:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "7214:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7214:14:29"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "7193:8:29"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7164:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "7174:8:29",
                "type": ""
              }
            ],
            "src": "7141:94:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7288:47:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7298:31:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7323:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "7309:13:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7309:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7298:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7270:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7280:7:29",
                "type": ""
              }
            ],
            "src": "7241:94:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7388:53:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7398:37:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7429:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7409:19:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7409:26:29"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "7398:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7370:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "7380:7:29",
                "type": ""
              }
            ],
            "src": "7341:100:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7530:74:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7547:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7590:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7572:17:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7572:24:29"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7552:19:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7552:45:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7540:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7540:58:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7540:58:29"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7518:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7525:3:29",
                "type": ""
              }
            ],
            "src": "7447:157:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7754:253:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7827:6:29"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7836:3:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7765:61:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7765:75:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7765:75:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7849:19:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7860:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7865:2:29",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7856:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7856:12:29"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7849:3:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7940:6:29"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7949:3:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7878:61:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7878:75:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7878:75:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7962:19:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7973:3:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7978:2:29",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7969:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7969:12:29"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7962:3:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7991:10:29",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "7998:3:29"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7991:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7725:3:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7731:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7739:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7750:3:29",
                "type": ""
              }
            ],
            "src": "7610:397:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8139:206:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8149:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8161:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8172:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8157:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8157:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8149:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8229:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8242:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8253:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8238:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8238:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8185:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8185:71:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8185:71:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8310:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8323:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8334:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8319:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8319:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8266:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8266:72:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8266:72:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8103:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8115:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8123:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8134:4:29",
                "type": ""
              }
            ],
            "src": "8013:332:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8477:206:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8487:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8499:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8510:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8495:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8495:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8487:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8567:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8580:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8591:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8576:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8576:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8523:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8523:71:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8523:71:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8648:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8661:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8672:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8657:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8657:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8604:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8604:72:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8604:72:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8441:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8453:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8461:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8472:4:29",
                "type": ""
              }
            ],
            "src": "8351:332:29"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31(memPtr) {\n\n        mstore(add(memPtr, 0), \"AKUniswapV2: FORBIDDEN\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff(memPtr) {\n\n        mstore(add(memPtr, 0), \"AKUniswapV2: IDENTICAL_ADDRESSES\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3(memPtr) {\n\n        mstore(add(memPtr, 0), \"AKUniswapV2: ZERO_ADDRESS\")\n\n    }\n\n    function abi_encode_t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"AKUniswapV2: PAIR_EXISTS\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "137:1683:7:-:0;;;353:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;411:12;397:11;;:26;;;;;;;;;;;;;;;;;;353:77;137:1683;;88:117:29;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;137:1683:7:-;;;;;;;",
  "deployedSourceMap": "137:1683:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;194:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;321:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1650:168;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;536:958;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;253:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1500:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;194:20;;;;;;;;;;;;:::o;220:26::-;;;;;;;;;;;;;:::o;321:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;436:94::-;485:4;508:8;:15;;;;501:22;;436:94;:::o;1650:168::-;1737:11;;;;;;;;;;;1723:25;;:10;:25;;;1715:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1799:12;1785:11;;:26;;;;;;;;;;;;;;;;;;1650:168;:::o;536:958::-;606:12;648:6;638:16;;:6;:16;;;;630:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;702:14;718;745:6;736:15;;:6;:15;;;:53;;774:6;782;736:53;;;755:6;763;736:53;701:88;;;;825:1;807:20;;:6;:20;;;;799:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;910:1;875:37;;:7;:15;883:6;875:15;;;;;;;;;;;;;;;:23;891:6;875:23;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;867:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;981:21;1005:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;981:58;;1049:12;1091:6;1099;1074:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1064:43;;;;;;1049:58;;1195:4;1184:8;1178:15;1173:2;1163:8;1159:17;1156:1;1148:52;1140:60;;1236:4;1219:33;;;1253:6;1261;1219:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:4;1278:7;:15;1286:6;1278:15;;;;;;;;;;;;;;;:23;1294:6;1278:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1344:4;1318:7;:15;1326:6;1318:15;;;;;;;;;;;;;;;:23;1334:6;1318:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1403:8;1417:4;1403:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1457:6;1437:50;;1449:6;1437:50;;;1465:4;1471:8;:15;;;;1437:50;;;;;;;:::i;:::-;;;;;;;;620:874;;;;536:958;;;;:::o;253:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1500:144::-;1575:11;;;;;;;;;;;1561:25;;:10;:25;;;1553:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1631:6;1623:5;;:14;;;;;;;;;;;;;;;;;;1500:144;:::o;-1:-1:-1:-;;;;;;;;:::o;7:126:29:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:474::-;2639:6;2647;2696:2;2684:9;2675:7;2671:23;2667:32;2664:119;;;2702:79;;:::i;:::-;2664:119;2822:1;2847:53;2892:7;2883:6;2872:9;2868:22;2847:53;:::i;:::-;2837:63;;2793:117;2949:2;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2920:118;2571:474;;;;;:::o;3051:169::-;3135:11;3169:6;3164:3;3157:19;3209:4;3204:3;3200:14;3185:29;;3051:169;;;;:::o;3226:172::-;3366:24;3362:1;3354:6;3350:14;3343:48;3226:172;:::o;3404:366::-;3546:3;3567:67;3631:2;3626:3;3567:67;:::i;:::-;3560:74;;3643:93;3732:3;3643:93;:::i;:::-;3761:2;3756:3;3752:12;3745:19;;3404:366;;;:::o;3776:419::-;3942:4;3980:2;3969:9;3965:18;3957:26;;4029:9;4023:4;4019:20;4015:1;4004:9;4000:17;3993:47;4057:131;4183:4;4057:131;:::i;:::-;4049:139;;3776:419;;;:::o;4201:182::-;4341:34;4337:1;4329:6;4325:14;4318:58;4201:182;:::o;4389:366::-;4531:3;4552:67;4616:2;4611:3;4552:67;:::i;:::-;4545:74;;4628:93;4717:3;4628:93;:::i;:::-;4746:2;4741:3;4737:12;4730:19;;4389:366;;;:::o;4761:419::-;4927:4;4965:2;4954:9;4950:18;4942:26;;5014:9;5008:4;5004:20;5000:1;4989:9;4985:17;4978:47;5042:131;5168:4;5042:131;:::i;:::-;5034:139;;4761:419;;;:::o;5186:175::-;5326:27;5322:1;5314:6;5310:14;5303:51;5186:175;:::o;5367:366::-;5509:3;5530:67;5594:2;5589:3;5530:67;:::i;:::-;5523:74;;5606:93;5695:3;5606:93;:::i;:::-;5724:2;5719:3;5715:12;5708:19;;5367:366;;;:::o;5739:419::-;5905:4;5943:2;5932:9;5928:18;5920:26;;5992:9;5986:4;5982:20;5978:1;5967:9;5963:17;5956:47;6020:131;6146:4;6020:131;:::i;:::-;6012:139;;5739:419;;;:::o;6164:174::-;6304:26;6300:1;6292:6;6288:14;6281:50;6164:174;:::o;6344:366::-;6486:3;6507:67;6571:2;6566:3;6507:67;:::i;:::-;6500:74;;6583:93;6672:3;6583:93;:::i;:::-;6701:2;6696:3;6692:12;6685:19;;6344:366;;;:::o;6716:419::-;6882:4;6920:2;6909:9;6905:18;6897:26;;6969:9;6963:4;6959:20;6955:1;6944:9;6940:17;6933:47;6997:131;7123:4;6997:131;:::i;:::-;6989:139;;6716:419;;;:::o;7141:94::-;7174:8;7222:5;7218:2;7214:14;7193:35;;7141:94;;;:::o;7241:::-;7280:7;7309:20;7323:5;7309:20;:::i;:::-;7298:31;;7241:94;;;:::o;7341:100::-;7380:7;7409:26;7429:5;7409:26;:::i;:::-;7398:37;;7341:100;;;:::o;7447:157::-;7552:45;7572:24;7590:5;7572:24;:::i;:::-;7552:45;:::i;:::-;7547:3;7540:58;7447:157;;:::o;7610:397::-;7750:3;7765:75;7836:3;7827:6;7765:75;:::i;:::-;7865:2;7860:3;7856:12;7849:19;;7878:75;7949:3;7940:6;7878:75;:::i;:::-;7978:2;7973:3;7969:12;7962:19;;7998:3;7991:10;;7610:397;;;;;:::o;8013:332::-;8134:4;8172:2;8161:9;8157:18;8149:26;;8185:71;8253:1;8242:9;8238:17;8229:6;8185:71;:::i;:::-;8266:72;8334:2;8323:9;8319:18;8310:6;8266:72;:::i;:::-;8013:332;;;;;:::o;8351:::-;8472:4;8510:2;8499:9;8495:18;8487:26;;8523:71;8591:1;8580:9;8576:17;8567:6;8523:71;:::i;:::-;8604:72;8672:2;8661:9;8657:18;8648:6;8604:72;:::i;:::-;8351:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\nimport './interfaces/IAKUniswapV2Factory.sol';\nimport './AKUniswapV2Pair.sol';\n\ncontract AKUniswapV2Factory is IAKUniswapV2Factory {\n    address public feeTo;\n    address public feeToSetter;\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(tokenA != tokenB, 'AKUniswapV2: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'AKUniswapV2: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'AKUniswapV2: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(AKUniswapV2Pair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IAKUniswapV2Pair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'AKUniswapV2: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'AKUniswapV2: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/home/kojche/Documents/projects/alyra/courseCode/defi-alyra/contracts/UniswapV2/AKUniswapV2Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/UniswapV2/AKUniswapV2Factory.sol",
    "exportedSymbols": {
      "AKUniswapV2ERC20": [
        1283
      ],
      "AKUniswapV2Factory": [
        1470
      ],
      "AKUniswapV2Pair": [
        2486
      ],
      "IAKUniswapV2Callee": [
        4532
      ],
      "IAKUniswapV2ERC20": [
        4650
      ],
      "IAKUniswapV2Factory": [
        4713
      ],
      "IAKUniswapV2Pair": [
        4856
      ],
      "IERC20": [
        5028
      ],
      "Math": [
        5422
      ],
      "UQ112x112": [
        5626
      ]
    },
    "id": 1471,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1285,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "project:/contracts/UniswapV2/interfaces/IAKUniswapV2Factory.sol",
        "file": "./interfaces/IAKUniswapV2Factory.sol",
        "id": 1286,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1471,
        "sourceUnit": 4714,
        "src": "57:46:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/UniswapV2/AKUniswapV2Pair.sol",
        "file": "./AKUniswapV2Pair.sol",
        "id": 1287,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1471,
        "sourceUnit": 2487,
        "src": "104:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1288,
              "name": "IAKUniswapV2Factory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4713,
              "src": "168:19:7"
            },
            "id": 1289,
            "nodeType": "InheritanceSpecifier",
            "src": "168:19:7"
          }
        ],
        "canonicalName": "AKUniswapV2Factory",
        "contractDependencies": [
          2486
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1470,
        "linearizedBaseContracts": [
          1470,
          4713
        ],
        "name": "AKUniswapV2Factory",
        "nameLocation": "146:18:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              4667
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 1291,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "209:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1470,
            "src": "194:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1290,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4672
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 1293,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "235:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1470,
            "src": "220:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1292,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4681
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1299,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "308:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1470,
            "src": "253:62:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1298,
              "keyType": {
                "id": 1294,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "253:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1297,
                "keyType": {
                  "id": 1295,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "280:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "272:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1296,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4688
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1302,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "338:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1470,
            "src": "321:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1300,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "321:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1301,
              "nodeType": "ArrayTypeName",
              "src": "321:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "387:43:7",
              "statements": [
                {
                  "expression": {
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1307,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1293,
                      "src": "397:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1308,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "411:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "397:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "397:26:7"
                }
              ]
            },
            "id": 1312,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "373:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "365:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:22:7"
            },
            "returnParameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:0:7"
            },
            "scope": 1470,
            "src": "353:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4693
            ],
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "491:39:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1317,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1302,
                      "src": "508:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "508:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1316,
                  "id": 1319,
                  "nodeType": "Return",
                  "src": "501:22:7"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "445:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:2:7"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "485:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "484:6:7"
            },
            "scope": 1470,
            "src": "436:94:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4702
            ],
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "620:874:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1331,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "638:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1332,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1325,
                          "src": "648:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "638:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a204944454e544943414c5f414444524553534553",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "656:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff",
                          "typeString": "literal_string \"AKUniswapV2: IDENTICAL_ADDRESSES\""
                        },
                        "value": "AKUniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff",
                          "typeString": "literal_string \"AKUniswapV2: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "630:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "630:61:7"
                },
                {
                  "assignments": [
                    1338,
                    1340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1338,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "710:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "702:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1337,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "702:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1340,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "726:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "718:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1339,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "718:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1351,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1341,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "736:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1342,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1325,
                        "src": "745:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "736:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1347,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1325,
                          "src": "774:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1348,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "782:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1349,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "773:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "736:53:7",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1344,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "755:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1345,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1325,
                          "src": "763:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1346,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "754:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "701:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1353,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "807:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "825:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "817:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1354,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "817:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "817:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "807:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a205a45524f5f41444452455353",
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "829:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3",
                          "typeString": "literal_string \"AKUniswapV2: ZERO_ADDRESS\""
                        },
                        "value": "AKUniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3",
                          "typeString": "literal_string \"AKUniswapV2: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "799:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "799:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1363,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1299,
                              "src": "875:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1365,
                            "indexExpression": {
                              "id": 1364,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1338,
                              "src": "883:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "875:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1367,
                          "indexExpression": {
                            "id": 1366,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "891:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "875:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "910:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "902:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1368,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "902:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "902:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "875:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a20504149525f455849535453",
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "914:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4",
                          "typeString": "literal_string \"AKUniswapV2: PAIR_EXISTS\""
                        },
                        "value": "AKUniswapV2: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4",
                          "typeString": "literal_string \"AKUniswapV2: PAIR_EXISTS\""
                        }
                      ],
                      "id": 1362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "867:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1375,
                  "nodeType": "ExpressionStatement",
                  "src": "867:74:7"
                },
                {
                  "assignments": [
                    1377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1377,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "994:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "981:21:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1376,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "981:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1382,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1379,
                          "name": "AKUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2486,
                          "src": "1010:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AKUniswapV2Pair_$2486_$",
                            "typeString": "type(contract AKUniswapV2Pair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_AKUniswapV2Pair_$2486_$",
                            "typeString": "type(contract AKUniswapV2Pair)"
                          }
                        ],
                        "id": 1378,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1005:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1005:21:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_AKUniswapV2Pair_$2486",
                        "typeString": "type(contract AKUniswapV2Pair)"
                      }
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1005:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:58:7"
                },
                {
                  "assignments": [
                    1384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1384,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1057:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "1049:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1383,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1049:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1392,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1388,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "1091:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1389,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "1099:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1386,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1074:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1074:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1074:32:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1385,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1064:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1049:58:7"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1126:84:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1140:60:7",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1156:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1163:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1173:2:7",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1159:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1159:17:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1184:8:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1178:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1178:15:7"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1195:4:7"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1148:7:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1148:52:7"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1140:4:7"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 1377,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1163:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1377,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1184:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1328,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1140:4:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1384,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1195:4:7",
                      "valueSize": 1
                    }
                  ],
                  "id": 1393,
                  "nodeType": "InlineAssembly",
                  "src": "1117:93:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1398,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "1253:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1399,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1261:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1395,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "1236:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1394,
                          "name": "IAKUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4856,
                          "src": "1219:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAKUniswapV2Pair_$4856_$",
                            "typeString": "type(contract IAKUniswapV2Pair)"
                          }
                        },
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1219:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAKUniswapV2Pair_$4856",
                          "typeString": "contract IAKUniswapV2Pair"
                        }
                      },
                      "id": 1397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4855,
                      "src": "1219:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1401,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:49:7"
                },
                {
                  "expression": {
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1402,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "1278:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1405,
                        "indexExpression": {
                          "id": 1403,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "1286:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1278:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1406,
                      "indexExpression": {
                        "id": 1404,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1294:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1278:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1407,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1328,
                      "src": "1304:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1278:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1409,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:30:7"
                },
                {
                  "expression": {
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1410,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "1318:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1413,
                        "indexExpression": {
                          "id": 1411,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "1326:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1318:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1414,
                      "indexExpression": {
                        "id": 1412,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "1334:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1318:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1415,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1328,
                      "src": "1344:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1318:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1421,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1328,
                        "src": "1417:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1418,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "1403:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1403:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1423,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:19:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1425,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "1449:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1426,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1457:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1427,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1328,
                        "src": "1465:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1428,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1302,
                          "src": "1471:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1471:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1424,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4662,
                      "src": "1437:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1431,
                  "nodeType": "EmitStatement",
                  "src": "1432:55:7"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "545:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "564:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "556:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "580:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "572:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "555:32:7"
            },
            "returnParameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1328,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "614:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "606:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "605:14:7"
            },
            "scope": 1470,
            "src": "536:958:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4707
            ],
            "body": {
              "id": 1450,
              "nodeType": "Block",
              "src": "1543:101:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1439,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1561:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1561:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1441,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "1575:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1561:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a20464f5242494444454e",
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1588:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                          "typeString": "literal_string \"AKUniswapV2: FORBIDDEN\""
                        },
                        "value": "AKUniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                          "typeString": "literal_string \"AKUniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 1438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1553:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1553:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1445,
                  "nodeType": "ExpressionStatement",
                  "src": "1553:60:7"
                },
                {
                  "expression": {
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1446,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1291,
                      "src": "1623:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1447,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "1631:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1623:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:14:7"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 1451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1509:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1526:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "1518:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1517:16:7"
            },
            "returnParameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1543:0:7"
            },
            "scope": 1470,
            "src": "1500:144:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4712
            ],
            "body": {
              "id": 1468,
              "nodeType": "Block",
              "src": "1705:113:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1723:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1723:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1459,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "1737:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1723:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a20464f5242494444454e",
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1750:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                          "typeString": "literal_string \"AKUniswapV2: FORBIDDEN\""
                        },
                        "value": "AKUniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                          "typeString": "literal_string \"AKUniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 1456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1715:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:60:7"
                },
                {
                  "expression": {
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1464,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1293,
                      "src": "1785:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1465,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "1799:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1785:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:26:7"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 1469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1659:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1453,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1682:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1469,
                  "src": "1674:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1673:22:7"
            },
            "returnParameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1705:0:7"
            },
            "scope": 1470,
            "src": "1650:168:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1471,
        "src": "137:1683:7",
        "usedErrors": []
      }
    ],
    "src": "32:1789:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/UniswapV2/AKUniswapV2Factory.sol",
    "exportedSymbols": {
      "AKUniswapV2ERC20": [
        1283
      ],
      "AKUniswapV2Factory": [
        1470
      ],
      "AKUniswapV2Pair": [
        2486
      ],
      "IAKUniswapV2Callee": [
        4532
      ],
      "IAKUniswapV2ERC20": [
        4650
      ],
      "IAKUniswapV2Factory": [
        4713
      ],
      "IAKUniswapV2Pair": [
        4856
      ],
      "IERC20": [
        5028
      ],
      "Math": [
        5422
      ],
      "UQ112x112": [
        5626
      ]
    },
    "id": 1471,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1285,
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "project:/contracts/UniswapV2/interfaces/IAKUniswapV2Factory.sol",
        "file": "./interfaces/IAKUniswapV2Factory.sol",
        "id": 1286,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1471,
        "sourceUnit": 4714,
        "src": "57:46:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/UniswapV2/AKUniswapV2Pair.sol",
        "file": "./AKUniswapV2Pair.sol",
        "id": 1287,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1471,
        "sourceUnit": 2487,
        "src": "104:31:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1288,
              "name": "IAKUniswapV2Factory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4713,
              "src": "168:19:7"
            },
            "id": 1289,
            "nodeType": "InheritanceSpecifier",
            "src": "168:19:7"
          }
        ],
        "canonicalName": "AKUniswapV2Factory",
        "contractDependencies": [
          2486
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1470,
        "linearizedBaseContracts": [
          1470,
          4713
        ],
        "name": "AKUniswapV2Factory",
        "nameLocation": "146:18:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              4667
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 1291,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "209:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1470,
            "src": "194:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1290,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "194:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4672
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 1293,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "235:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 1470,
            "src": "220:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1292,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4681
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 1299,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "308:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1470,
            "src": "253:62:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 1298,
              "keyType": {
                "id": 1294,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "253:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 1297,
                "keyType": {
                  "id": 1295,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "280:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "272:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 1296,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4688
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 1302,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "338:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1470,
            "src": "321:25:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 1300,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "321:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 1301,
              "nodeType": "ArrayTypeName",
              "src": "321:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "387:43:7",
              "statements": [
                {
                  "expression": {
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1307,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1293,
                      "src": "397:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1308,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1304,
                      "src": "411:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "397:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "397:26:7"
                }
              ]
            },
            "id": 1312,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1304,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "373:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "365:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:22:7"
            },
            "returnParameters": {
              "id": 1306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:0:7"
            },
            "scope": 1470,
            "src": "353:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4693
            ],
            "body": {
              "id": 1320,
              "nodeType": "Block",
              "src": "491:39:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1317,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1302,
                      "src": "508:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "508:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1316,
                  "id": 1319,
                  "nodeType": "Return",
                  "src": "501:22:7"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 1321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "445:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "459:2:7"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "485:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "484:6:7"
            },
            "scope": 1470,
            "src": "436:94:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4702
            ],
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "620:874:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1331,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "638:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1332,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1325,
                          "src": "648:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "638:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a204944454e544943414c5f414444524553534553",
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "656:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff",
                          "typeString": "literal_string \"AKUniswapV2: IDENTICAL_ADDRESSES\""
                        },
                        "value": "AKUniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8efee09f009678b2b7ebcb218e178d7575c8ecc64bb00ae6911fa0a54bf4cff",
                          "typeString": "literal_string \"AKUniswapV2: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "630:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1336,
                  "nodeType": "ExpressionStatement",
                  "src": "630:61:7"
                },
                {
                  "assignments": [
                    1338,
                    1340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1338,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "710:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "702:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1337,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "702:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1340,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "726:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "718:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1339,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "718:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1351,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1341,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "736:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1342,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1325,
                        "src": "745:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "736:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1347,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1325,
                          "src": "774:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1348,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "782:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1349,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "773:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "736:53:7",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1344,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "755:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1345,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1325,
                          "src": "763:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1346,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "754:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "701:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1353,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "807:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "825:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "817:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1354,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "817:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "817:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "807:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a205a45524f5f41444452455353",
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "829:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3",
                          "typeString": "literal_string \"AKUniswapV2: ZERO_ADDRESS\""
                        },
                        "value": "AKUniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b41e30d424c4af414464f0cf95e5678cd04556e0e23d9e72cb6b4156152d3dc3",
                          "typeString": "literal_string \"AKUniswapV2: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "799:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "799:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "799:58:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1363,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1299,
                              "src": "875:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1365,
                            "indexExpression": {
                              "id": 1364,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1338,
                              "src": "883:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "875:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1367,
                          "indexExpression": {
                            "id": 1366,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "891:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "875:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "910:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "902:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1368,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "902:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "902:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "875:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a20504149525f455849535453",
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "914:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4",
                          "typeString": "literal_string \"AKUniswapV2: PAIR_EXISTS\""
                        },
                        "value": "AKUniswapV2: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9f10c527fb1bc55b184a007bbbbe508d5e22567a790a2c334acb74377daa8d4",
                          "typeString": "literal_string \"AKUniswapV2: PAIR_EXISTS\""
                        }
                      ],
                      "id": 1362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "867:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:74:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1375,
                  "nodeType": "ExpressionStatement",
                  "src": "867:74:7"
                },
                {
                  "assignments": [
                    1377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1377,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "994:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "981:21:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1376,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "981:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1382,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1379,
                          "name": "AKUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2486,
                          "src": "1010:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AKUniswapV2Pair_$2486_$",
                            "typeString": "type(contract AKUniswapV2Pair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_AKUniswapV2Pair_$2486_$",
                            "typeString": "type(contract AKUniswapV2Pair)"
                          }
                        ],
                        "id": 1378,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1005:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1005:21:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_AKUniswapV2Pair_$2486",
                        "typeString": "type(contract AKUniswapV2Pair)"
                      }
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1005:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "981:58:7"
                },
                {
                  "assignments": [
                    1384
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1384,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1057:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1432,
                      "src": "1049:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1383,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1049:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1392,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1388,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "1091:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1389,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1340,
                            "src": "1099:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1386,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1074:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1074:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1074:32:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1385,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1064:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1049:58:7"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1126:84:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1140:60:7",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1156:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1163:8:7"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1173:2:7",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1159:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1159:17:7"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1184:8:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1178:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1178:15:7"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1195:4:7"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1148:7:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1148:52:7"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1140:4:7"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 1377,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1163:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1377,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1184:8:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1328,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1140:4:7",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1384,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1195:4:7",
                      "valueSize": 1
                    }
                  ],
                  "id": 1393,
                  "nodeType": "InlineAssembly",
                  "src": "1117:93:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1398,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "1253:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1399,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1261:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1395,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "1236:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1394,
                          "name": "IAKUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4856,
                          "src": "1219:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAKUniswapV2Pair_$4856_$",
                            "typeString": "type(contract IAKUniswapV2Pair)"
                          }
                        },
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1219:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAKUniswapV2Pair_$4856",
                          "typeString": "contract IAKUniswapV2Pair"
                        }
                      },
                      "id": 1397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4855,
                      "src": "1219:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1401,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:49:7"
                },
                {
                  "expression": {
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1402,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "1278:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1405,
                        "indexExpression": {
                          "id": 1403,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1338,
                          "src": "1286:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1278:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1406,
                      "indexExpression": {
                        "id": 1404,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1294:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1278:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1407,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1328,
                      "src": "1304:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1278:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1409,
                  "nodeType": "ExpressionStatement",
                  "src": "1278:30:7"
                },
                {
                  "expression": {
                    "id": 1416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1410,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "1318:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1413,
                        "indexExpression": {
                          "id": 1411,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1340,
                          "src": "1326:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1318:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1414,
                      "indexExpression": {
                        "id": 1412,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "1334:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1318:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1415,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1328,
                      "src": "1344:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1318:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1417,
                  "nodeType": "ExpressionStatement",
                  "src": "1318:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1421,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1328,
                        "src": "1417:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1418,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1302,
                        "src": "1403:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1403:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:19:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1423,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:19:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1425,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "1449:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1426,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1340,
                        "src": "1457:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1427,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1328,
                        "src": "1465:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1428,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1302,
                          "src": "1471:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1471:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1424,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4662,
                      "src": "1437:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1437:50:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1431,
                  "nodeType": "EmitStatement",
                  "src": "1432:55:7"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "545:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "564:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "556:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "580:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "572:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "555:32:7"
            },
            "returnParameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1328,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "614:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1433,
                  "src": "606:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "605:14:7"
            },
            "scope": 1470,
            "src": "536:958:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4707
            ],
            "body": {
              "id": 1450,
              "nodeType": "Block",
              "src": "1543:101:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1439,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1561:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1561:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1441,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "1575:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1561:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a20464f5242494444454e",
                        "id": 1443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1588:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                          "typeString": "literal_string \"AKUniswapV2: FORBIDDEN\""
                        },
                        "value": "AKUniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                          "typeString": "literal_string \"AKUniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 1438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1553:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1553:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1445,
                  "nodeType": "ExpressionStatement",
                  "src": "1553:60:7"
                },
                {
                  "expression": {
                    "id": 1448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1446,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1291,
                      "src": "1623:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1447,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1435,
                      "src": "1631:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1623:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1449,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:14:7"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 1451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1509:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1435,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1526:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1451,
                  "src": "1518:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1517:16:7"
            },
            "returnParameters": {
              "id": 1437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1543:0:7"
            },
            "scope": 1470,
            "src": "1500:144:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4712
            ],
            "body": {
              "id": 1468,
              "nodeType": "Block",
              "src": "1705:113:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1457,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1723:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1723:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1459,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "1737:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1723:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "414b556e697377617056323a20464f5242494444454e",
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1750:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                          "typeString": "literal_string \"AKUniswapV2: FORBIDDEN\""
                        },
                        "value": "AKUniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0ec69331c23cf90e8c3399e6b67adebdec9a0f8bf9de2a4e6fbb005781af2a31",
                          "typeString": "literal_string \"AKUniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 1456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1715:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:60:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1463,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:60:7"
                },
                {
                  "expression": {
                    "id": 1466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1464,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1293,
                      "src": "1785:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1465,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "1799:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1785:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1467,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:26:7"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 1469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1659:14:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1453,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1682:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1469,
                  "src": "1674:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1673:22:7"
            },
            "returnParameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1705:0:7"
            },
            "scope": 1470,
            "src": "1650:168:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1471,
        "src": "137:1683:7",
        "usedErrors": []
      }
    ],
    "src": "32:1789:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-07T09:32:57.181Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}